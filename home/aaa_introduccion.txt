Git:
Sistema de Control de versiones que nos permite rastrear los cambios que hemos
hecho en un conjunto de archivos.

Control de versiones:
Sistema encargado de administrar los cambios realizados en programas de computadora
o conjuntos de archivos.

Repositories:
Colección de archivos de distintas versiones de un proyecto.

Commits:
Componentes básicos de la línea del tiempo de un proyecto de Git.
Son como un registro o una "foto" del estado de un proyecto en un momento específico.
Git le asigna a cada Commit un identificador único llamado SHA(Secure Hash Algorithm) o hash.

SHA:
Identifica:
- Los cambios realizados.
- Donde se realizaron los cambios.
- Quien realizó los cambios.

Branches:
Una rama en git es una línea independiente de desarrollo en el repositorio.

Areas en Git:
- Directorio de Trabajo.
- Área de preparación.
- Repositorio.

Directorio de Trabajo:
La carpeta del proyecto que contiene los archivos y el directorio .git del
repositorio.

Area de preparacion:
conjunto de archivos y cambios que serán incluidos en el próximo Commit.

Repositorio:
Directorio que contiene los metadatos y las versiones de tu proyecto.
Es la parte del repositorio que se copia cuando clonas un repositorio a tu computadora.

Estados de los archivos:
Directorio de Trabajo --> modified
Area de preparacion --> staged
Repositorio --> committed

Modified:
Si la versión del archivo contiene cambios que no son parte del repositorio y no se ha
añadido al área de preparación.

Staged:
Si la versión del archivo contiene cambios que no son parte del repositorio pero fue añadida
al área de preparación.

Committed:
Si la versión del archivo ya se encuentra en el directorio de Git.

Merge:
Proceso que permite combinar varias líneas independientes de desarrollo en una sola rama.

Git Hub:
Servicio de hosting que nos permite almacenar proyectos de desarrollo de software y
control de versiones usando Git.

Clonar:
Crear una copia local de un repositorio remoto, incluyendo sus versiones e historial de commits.

Origin:
Nombre que comúnmente le asignamos al repositorio remoto que clonamos.

Push:
Comando usado para enviar los cambios realizados en un repositorio local a un repositorio
remoto para que ambos tengan la misma información.

Pull:
Comando usado para descargar el contenido de un repositorio remoto e inmediatamente actualizar
un repositorio local para que ambos tengan la misma información.

Fetch:
Comando usado para verificar los cambios realizados en el repositorio remoto sin combinar
esos cambios con el repositorio local.

Fork:
Bifurcar un repositorio es crear una copia de repositorio remoto en nuestra cuenta de Git Hub.

Pull Requests:
Solicitud de combinar tus cambios con el repositorio original del proyecto.

Issues:
problemas, tareas o incidencias que se registran para seguir y gestionar el progreso
del trabajo en un proyecto.