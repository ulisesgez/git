Git
Sistema de control de versiones que permite rastrear los cambios realizados en un conjunto de archivos.
Es ampliamente utilizado para administrar proyectos de software y trabajar de forma colaborativa.

Control de versiones
Sistema encargado de administrar los cambios realizados en programas de computadora o conjuntos de archivos,
permitiendo mantener un historial de modificaciones y facilitar el trabajo en equipo.

Repositorio (Repository)
Directorio que contiene:
- Los archivos del proyecto en sus diferentes versiones.
- Metadatos del control de versiones. El repositorio se copia completamente al clonar un proyecto en tu computadora.

Áreas en Git
- Directorio de trabajo:
    Carpeta donde se encuentran los archivos del proyecto y el directorio .git con los metadatos del repositorio.

- Área de preparación (Staging Area):
    Conjunto de archivos y cambios seleccionados que serán incluidos en el próximo commit.

- Repositorio:
    Contiene los datos históricos del proyecto y las versiones de los archivos.

Commits
Un commit es como una "foto" del estado de un proyecto en un momento específico.
- Es un registro básico en la línea del tiempo de Git.
- Cada commit tiene un identificador único llamado SHA (Secure Hash Algorithm o hash).

SHA
El SHA identifica:
- Los cambios realizados.
- Dónde se realizaron los cambios.
- Quién realizó los cambios.

Branches (Ramas)
Una rama es una línea independiente de desarrollo dentro de un repositorio, lo que permite trabajar en diferentes
características o soluciones de forma aislada antes de fusionarlas con la línea principal de desarrollo.

Estados de los Archivos
- Directorio de Trabajo → Modified
    El archivo contiene cambios que no forman parte del repositorio y no se ha añadido al área de preparación.

- Área de Preparación → Staged
El archivo contiene cambios que aún no están en el repositorio, pero han sido añadidos al área de preparación.

- Repositorio → Committed
    El archivo ya forma parte del repositorio y su versión está registrada en el historial de Git.

Merge
Proceso que permite combinar varias líneas independientes de desarrollo en una sola rama.



GitHub
Servicio de hosting que permite almacenar proyectos de desarrollo de software y control de versiones utilizando Git.

Clonar
Crear una copia local de un repositorio remoto, incluyendo sus versiones e historial de commits.

Origin
Nombre comúnmente asignado al repositorio remoto que fue clonado.

Push
Comando para enviar los cambios realizados en un repositorio local a un repositorio remoto, manteniendo ambos sincronizados.

Pull
Comando para descargar el contenido de un repositorio remoto y actualizar inmediatamente el repositorio local.

Fetch
Comando para verificar los cambios realizados en un repositorio remoto, sin combinarlos directamente con el repositorio local.

Fork
Crear una copia de un repositorio remoto en tu cuenta de GitHub, permitiendo realizar modificaciones de manera independiente.

Pull Requests
Solicitud para combinar los cambios realizados en tu repositorio con el repositorio original del proyecto.

Issues
Herramienta para registrar problemas, tareas o incidencias y gestionar el progreso del trabajo en un proyecto.