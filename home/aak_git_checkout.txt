Git Checkout:
El comando git checkout se utiliza para cambiar entre ramas, restaurar archivos y trabajar
con ramas y confirmaciones en un repositorio de Git.

Definición:
git checkout permite cambiar entre ramas, restaurar archivos y trabajar con ramas y
confirmaciones en un repositorio de Git.

Ejemplos:
Aquí tienes algunos ejemplos de cómo puedes usar git checkout:

Cambiar a una rama existente:

$ git checkout nombre_rama

Esto cambiará tu directorio de trabajo y la cabeza (HEAD) al estado de la rama
especificada (nombre_rama).

Crear una nueva rama y cambiar a ella:

$ git checkout -b nueva_rama

Esto creará una nueva rama llamada nueva_rama y te cambiará a ella. Es equivalente a
ejecutar git branch nueva_rama seguido de git checkout nueva_rama.

Restaurar archivos del área de preparación o de una confirmación específica:

$ git checkout -- archivo_modificado.txt

Esto restaurará archivo_modificado.txt a su estado en la última confirmación.
Si el archivo estaba en el área de preparación, también lo sacará de allí.

Cambiar a una confirmación específica (creando una rama temporal):

$ git checkout hash_confirmacion

Esto te llevará al estado de la confirmación especificada (hash_confirmacion).
Puedes crear una nueva rama a partir de esa confirmación si necesitas trabajar en ella.

Cambiar a la confirmación más reciente en la rama actual:

$ git checkout -

Esto te llevará a la confirmación más reciente en la rama actual, útil si necesitas
regresar rápidamente a la confirmación anterior.

Cambiar a un estado específico de un archivo en el área de preparación:

$ git checkout --patch archivo_modificado.txt

Esto te permitirá elegir qué partes del archivo archivo_modificado.txt quieres restaurar
del área de preparación, de manera interactiva.

Recuerda que git checkout puede cambiar tu estado de trabajo, por lo que debes tener
cuidado al usarlo, especialmente si tienes cambios sin confirmar.